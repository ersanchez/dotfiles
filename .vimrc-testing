" .vimrc for Eduardo

" Basic Settings __________________________________________________________ {{{

set autoindent		" copy indent level from preceding line
set autoread		" reload file if updated outside of vim
set background=dark	" friendlier colors for dark background
set colorcolumn=+1	" highlight screen columns
set cursorline		" highlight the current line
set encoding=utf-8	" UTF8
set hlsearch		" highlight search term
set incsearch		" search as you start typing
set ignorecase		" ignore case in searches
set laststatus=2	" always show status bar
set list listchars=tab:\ \ ,trail:·	" show trailing whitespace as a dot from github.com/Integralist
set matchpairs+=<:>	" adds <> to the default [],{}, and () helpful for html and xml
set modeline		" enables vim to read a comment line in scripts
set nocompatible	" prevents running vim in vi-compatible (limited) mode
set number		" show line numbers
set relativenumber	" show lines +/- from the current line
set ruler		" show ruler at bottom of page
set shiftwidth=4	" number of spaces for auto-indent
set showbreak=↪		" indicate wrapped lines
set showcmd		" show command on the last line of screen
set showmatch		" jump to matching bracket
set showmode		" show current mode: INSERT, REPLACE, or VISUAL
set smartcase		" overrides `ignorecase` if you enter a capital in a search
set statusline=%f\ %=L:%l/%L\ %c\ (%p%%)	" formats status line to show line number and percentage from beginning
			" relies on 'set ignorecase' being there
set tabstop=4		" number of spaces <TAB> is equal to 4
set title			" shows file information at the top
set visualbell 		" screen flash instead of a beep

syntax on		" syntax highlighting
" }}}
 
" Highlight column 80 (from github.com/Integralist) {{{

autocmd BufWinEnter * highlight ColorColumn ctermbg=darkred
set colorcolumn=80

" }}}

" Folding Settings ________________________________________________________ {{{

set foldcolumn=4	" display column in left margin indicating folded sections

function! MarkdownLevel()
	if getline(v:lnum) =~ '^# .*$'
		return ">1"
	endif
	if getline(v:lnum) =~ '^## .*$'
		return ">2"
	endif
	if getline(v:lnum) =~ '^### .*$'
		return ">3"
	endif
	return "="
endfunction

au BufEnter *.md setlocal foldexpr=MarkdownLevel()
au BufEnter *.md setlocal foldmethod=expr

" }}}

" Customizations
"nnoremap ; :	
"nnoremap : ;
